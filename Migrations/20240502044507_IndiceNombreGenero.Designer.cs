// <auto-generated />
using System;
using EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFramework.Migrations
{
    [DbContext(typeof(AplicationDBConext))]
    [Migration("20240502044507_IndiceNombreGenero")]
    partial class IndiceNombreGenero
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityFramework.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1966, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adan Sandler",
                            Salary = 1200m
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1965, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kevin James",
                            Salary = 1200m
                        });
                });

            modelBuilder.Entity("EntityFramework.Entities.ActorMovie", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("ActorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("ActorsMovies");

                    b.HasData(
                        new
                        {
                            ActorId = 2,
                            MovieId = 6,
                            Character = "John Smith",
                            Order = 1
                        },
                        new
                        {
                            ActorId = 3,
                            MovieId = 5,
                            Character = "El loco",
                            Order = 2
                        });
                });

            modelBuilder.Entity("EntityFramework.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Content = "The best movie ever",
                            IsApproved = true,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 4,
                            Content = "I cried a lot",
                            IsApproved = false,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 5,
                            Content = "I love this movie",
                            IsApproved = true,
                            MovieId = 6
                        });
                });

            modelBuilder.Entity("EntityFramework.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Animation"
                        });
                });

            modelBuilder.Entity("EntityFramework.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("InTheaters")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Description = "ABCDE",
                            InTheaters = true,
                            ReleaseDate = new DateTime(2012, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Avengers"
                        },
                        new
                        {
                            Id = 5,
                            Description = "ABCDE",
                            InTheaters = true,
                            ReleaseDate = new DateTime(2004, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Notebook"
                        },
                        new
                        {
                            Id = 6,
                            Description = "ABCDE",
                            InTheaters = true,
                            ReleaseDate = new DateTime(2005, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mr. & Mrs. Smith"
                        });
                });

            modelBuilder.Entity("GenderMovie", b =>
                {
                    b.Property<int>("GendersId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("GendersId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("GenderMovie");

                    b.HasData(
                        new
                        {
                            GendersId = 5,
                            MoviesId = 4
                        },
                        new
                        {
                            GendersId = 6,
                            MoviesId = 6
                        });
                });

            modelBuilder.Entity("EntityFramework.Entities.ActorMovie", b =>
                {
                    b.HasOne("EntityFramework.Entities.Actor", "Actor")
                        .WithMany("ActorsMovies")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Entities.Movie", "Movie")
                        .WithMany("ActorsMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("EntityFramework.Entities.Comment", b =>
                {
                    b.HasOne("EntityFramework.Entities.Movie", "Movie")
                        .WithMany("Comments")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("GenderMovie", b =>
                {
                    b.HasOne("EntityFramework.Entities.Gender", null)
                        .WithMany()
                        .HasForeignKey("GendersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityFramework.Entities.Actor", b =>
                {
                    b.Navigation("ActorsMovies");
                });

            modelBuilder.Entity("EntityFramework.Entities.Movie", b =>
                {
                    b.Navigation("ActorsMovies");

                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
